[{"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/index.js":"1","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/App.js":"2","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/Domain&Instructions/DomainPage.jsx":"3","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Quiz/DesignQuiz.js":"4","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Quiz/MgmtQuiz.js":"5","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Quiz/TechQuiz.js":"6","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/SignUp/Login/Login.js":"7","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/SignUp/ForgotPassword/ForgotPassword.js":"8","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/SignUp/SignUp.js":"9","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/Landing/Landing.js":"10","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/Domain&Instructions/Thankyou.jsx":"11","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/Domain&Instructions/Instructions.jsx":"12","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/hoc/Background/Background.js":"13","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Quiz/Timer.jsx":"14","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Modals/Modal.jsx":"15","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Footer/Footer.js":"16","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Countdown/Countdown.js":"17"},{"size":257,"mtime":1608740512251,"results":"18","hashOfConfig":"19"},{"size":2154,"mtime":1608575844936,"results":"20","hashOfConfig":"19"},{"size":3048,"mtime":1608482911118,"results":"21","hashOfConfig":"19"},{"size":7950,"mtime":1608740317894,"results":"22","hashOfConfig":"19"},{"size":7699,"mtime":1608740317895,"results":"23","hashOfConfig":"19"},{"size":10782,"mtime":1608740317969,"results":"24","hashOfConfig":"19"},{"size":4114,"mtime":1608739911624,"results":"25","hashOfConfig":"19"},{"size":4612,"mtime":1608644975227,"results":"26","hashOfConfig":"19"},{"size":9784,"mtime":1608670865682,"results":"27","hashOfConfig":"19"},{"size":762,"mtime":1608391849255,"results":"28","hashOfConfig":"19"},{"size":603,"mtime":1608388393288,"results":"29","hashOfConfig":"19"},{"size":1751,"mtime":1608397919810,"results":"30","hashOfConfig":"19"},{"size":6287,"mtime":1608659941219,"results":"31","hashOfConfig":"19"},{"size":1225,"mtime":1608740317992,"results":"32","hashOfConfig":"19"},{"size":1329,"mtime":1608670865753,"results":"33","hashOfConfig":"19"},{"size":1289,"mtime":1608659928096,"results":"34","hashOfConfig":"19"},{"size":1472,"mtime":1608557548918,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19ihrd0",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/index.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/App.js",[],["76","77"],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/Domain&Instructions/DomainPage.jsx",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Quiz/DesignQuiz.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Quiz/MgmtQuiz.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Quiz/TechQuiz.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/SignUp/Login/Login.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/SignUp/ForgotPassword/ForgotPassword.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/SignUp/SignUp.js",["78","79"],"import React, { Component } from \"react\";\nimport Background from \"../../../hoc/Background/Background\";\nimport axios from \"axios\";\n\nexport class SignUp extends Component {\n  state = {\n    firstPage: true,\n    name: \"\",\n    regno: \"\",\n    email: \"\",\n    phone: \"\",\n    yearofstudy: 1,\n    password: \"\",\n    confirmPass: \"\",\n    github: \"\",\n    nameError: \"\",\n    regError: \"\",\n    emailError: \"\",\n    passError: \"\",\n    confirmPassError: \"\",\n    phoneError: \"\",\n    gitError: \"\",\n    err: \"\",\n    showPass: false,\n    showCPass: false,\n  };\n\n  validate = () => {\n    let nameError = \"\";\n    let regError = \"\";\n    let passError = \"\";\n    let confirmPassError = \"\";\n    var regPattern = /^[12][09][A-Za-z][A-Za-z][A-Za-z]\\d{4}$/;\n    var regPatternSoph = /^[1][9][A-Z][A-Z][A-Z]\\d{4}$/;\n\n    if (!this.state.name) {\n      nameError = \"Enter a valid Name\";\n    }\n\n    if (!this.state.regno) {\n      regError = \"Registration number cannot be left empty\";\n    } else if (!regPattern.test(this.state.regno)) {\n      regError = \"Enter a valid Registration Number\";\n    }\n\n    if (regPatternSoph.test(this.state.regno)) {\n      this.state.yearofstudy = 2;\n    }\n\n    if (!this.state.password) {\n      passError = \"Enter Password\";\n    } else if (this.state.password.length < 8) {\n      passError = \"Password length must be greater than 8 characters\";\n    }\n\n    if (this.state.password && !this.state.confirmPass) {\n      confirmPassError = \"Confirm Password\";\n    } else if (this.state.password !== this.state.confirmPass) {\n      confirmPassError = \"The entered passwords do not match\";\n    }\n\n    if (nameError || regError || passError || confirmPassError) {\n      this.setState({ nameError, regError, passError, confirmPassError });\n      return false;\n    }\n\n    return true;\n  };\n\n  validate2 = () => {\n    let emailError = \"\";\n    let phoneError = \"\";\n    let gitError = \"\";\n    var re = /^[a-zA-Z0-9.!#$%&'+=?^_`{|}~-]+@vitstudent.ac.in$/;\n\n    if (!this.state.email) {\n      emailError = \"Email field cannot be left empty\";\n    } else if (!re.test(this.state.email)) {\n      emailError = \"Enter a valid VIT Email ID\";\n    }\n\n    if (!this.state.phone) {\n      phoneError = \"Enter a valid Mobile Number\";\n    }\n\n    else if (this.state.phone.length!=10) {\n      phoneError = \"Mobile Number should be 10 digits long\";\n    }\n\n    if (this.state.yearofstudy === 2) {\n      if(!this.state.github) {\n        gitError = \"GitHub Link is mandatory for 2nd year students\";\n      }\n    }\n\n    if (emailError || phoneError || gitError) {\n      this.setState({ emailError, phoneError, gitError });\n      return false;\n    }\n\n    return true;\n  };\n\n  createAccountClickHandler = (event) => {\n    event.preventDefault();\n    this.validate();\n\n    if (this.validate()) {\n      this.setState({ firstPage: false });\n    }\n  };\n  inputChangeHandler = (e, s) => {\n    this.setState({ [s]: e.target.value });\n  };\n  formSubmitHandler = (e, a) => {\n    this.validate2();\n\n    console.log(this.state.yearofstudy);\n\n    if(this.validate2()) {\n      const data = JSON.stringify({\n        name: this.state.name,\n        regno: this.state.regno,\n        email: this.state.email,\n        phone: this.state.phone,\n        yearofstudy: this.state.yearofstudy,\n        password: this.state.password,\n        githubLink: this.state.github,\n      });\n      var config = {\n        method: \"post\",\n        url: \"https://adgrecruitments.herokuapp.com/user/signup\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        data: data,\n      };\n\n      axios(config)\n          .then(function (response) {\n            console.log(JSON.stringify(response.data));\n            a.history.push(\"/login\");\n          })\n          .catch(function (error) {\n            alert(error.response.data.message);\n            console.log(error.success);\n          });\n    }\n  };\n  componentDidMount() {\n    if (sessionStorage.getItem(\"Token\")) {\n      this.props.history.replace(\"/selection\");\n    }\n  }\n  eyeClickHandler = () => {\n    this.setState({ showPass: !this.state.showPass });\n  };\n  eyeClickHandlerC = () => {\n    this.setState({ showCPass: !this.state.showCPass });\n  };\n\n  render() {\n    return (\n      <Background>\n        <form autoComplete='false'>\n          {this.state.firstPage ? (\n            <div>\n              <div className='heading'>Sign Up</div>\n              <div className='input-grp'>\n                <label>Name</label>\n\n                <input\n                  className='input name-input'\n                  type='text'\n                  value={this.state.name}\n                  placeholder='Enter your name'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"name\");\n                  }}\n                />\n              </div>\n              {this.state.nameError ? (\n                <div className='error'>{this.state.nameError}</div>\n              ) : null}\n              <div className='input-grp '>\n                <label>Registration Number</label>\n                <input\n                  autoComplete='off'\n                  onFocus={this.onFocus}\n                  className='input t-uc'\n                  value={this.state.regno}\n                  type='text'\n                  placeholder='Enter Registration Number'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"regno\");\n                  }}\n                />\n              </div>\n              {this.state.regError ? (\n                <div className='error'>{this.state.regError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>Password</label>\n                <input\n                  className='input'\n                  type={`${this.state.showPass ? \"text\" : \"password\"}`}\n                  style={{ marginBottom: 10, position: \"relative\" }}\n                  value={this.state.password}\n                  placeholder='Enter Your Password'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"password\");\n                  }}\n                />\n                <div\n                  className={`lgn-eye ${\n                    this.state.showPass ? \"lgn-eye-t\" : null\n                  }`}\n                  onClick={this.eyeClickHandler}>\n                  <i className={`fas fa-eye  `}></i>\n                </div>\n              </div>\n              {this.state.passError ? (\n                <div className='error'>{this.state.passError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>Confirm Password</label>\n                <input\n                  className='input'\n                  type={`${this.state.showCPass ? \"text\" : \"password\"}`}\n                  style={{ marginBottom: 10, position: \"relative\" }}\n                  value={this.state.confirmPass}\n                  placeholder='Confirm Password'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"confirmPass\");\n                  }}\n                />\n                <div\n                  className={`lgn-eye ${\n                    this.state.showCPass ? \"lgn-eye-t\" : null\n                  }`}\n                  onClick={this.eyeClickHandlerC}>\n                  <i className={`fas fa-eye  `}></i>\n                </div>\n              </div>\n              {this.state.confirmPassError ? (\n                <div className='error'>{this.state.confirmPassError}</div>\n              ) : null}\n              <div className='sub-btn' onClick={this.createAccountClickHandler}>\n                Next\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className='heading'>Sign Up</div>\n              <div className='input-grp'>\n                <label>Phone Number</label>\n                <input\n                  className='input'\n                  type='text'\n                  value={this.state.phone}\n                  placeholder='Enter Your Phone Number'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"phone\");\n                  }}\n                />\n              </div>\n              {this.state.phoneError ? (\n                <div className='error'>{this.state.phoneError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>VIT Email</label>\n                <input\n                  className='input'\n                  type='text'\n                  value={this.state.email}\n                  placeholder='Enter Your VIT Email'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"email\");\n                  }}\n                />\n              </div>\n              {this.state.emailError ? (\n                <div className='error'>{this.state.emailError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>GitHub Link  (Mandatory for 2nd year students)</label>\n                <input\n                  className='input'\n                  type='text'\n                  value={this.state.github}\n                  placeholder='Enter Your GitHub Handle'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"github\");\n                  }}\n                />\n              </div>\n              {this.state.gitError ? (\n                <div className='error'>{this.state.gitError}</div>\n              ) : null}\n              <div\n                className='sub-btn'\n                onClick={(event) => {\n                  this.formSubmitHandler(event, this.props);\n                }}>\n                Sign Up\n              </div>\n            </div>\n          )}\n        </form>\n      </Background>\n    );\n  }\n}\n\nexport default SignUp;\n","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/Landing/Landing.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/Domain&Instructions/Thankyou.jsx",["80"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./styles.module.css\";\nimport Background from \"../../../hoc/Background/Background\";\n\nconst ThankYou = ()=>{\n    return(\n        <Background>\n            <div className={classes.wrapper}>\n            <div>Your responses have been saved!</div>\n            <p>You can attempt quiz from other domains if you haven't</p>\n            <Link to=\"/selection\"><button className={classes.redirectBtn}>Attempt other quizzes</button></Link>\n            </div>\n        </Background>\n    )\n}\nexport default ThankYou;","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Forms/Domain&Instructions/Instructions.jsx",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/hoc/Background/Background.js",["81"],"/* eslint-disable no-unused-expressions */\r\nimport \"./Background.css\";\r\nimport adglogo from \"../../assets/img/adglogo.png\";\r\nimport adglogo2 from \"../../assets/img/adglogo2.png\";\r\nimport userpic from \"../../assets/img/userpic.png\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport moment from \"moment\";\r\nimport Countdown from \"../../components/Countdown/Countdown\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class Background extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.background = null;\r\n    this.state = {\r\n      Token: sessionStorage.getItem(\"Token\"),\r\n      data: false,\r\n      recruitmentStatus: false,\r\n      dateValue: \"12-23-2020\",\r\n      timeValue: \"02:00\",\r\n      ampmValue: \"pm\",\r\n      countdown: {\r\n        days: \"\",\r\n        hours: \"\",\r\n        mins: \"\",\r\n        secs: \"\",\r\n      },\r\n      isCountdownSet: true,\r\n    };\r\n    this.timer = null;\r\n    this.countDownDate = {\r\n      dateValue: \"12-23-2020\",\r\n      timeValue: \"02:00\",\r\n      ampmValue: \"pm\",\r\n      unixEndDate: \"\",\r\n    };\r\n  }\r\n\r\n  renderCountdownDate(countDownDate) {\r\n    countDownDate\r\n      ? localStorage.setItem(\"countDownDate\", JSON.stringify(countDownDate))\r\n      : null;\r\n    return (\r\n      JSON.parse(localStorage.getItem(\"countDownDate\")) || this.countDownDate\r\n    );\r\n  }\r\n\r\n  setEndDate() {\r\n    let dateValue = \"12-23-2020\";\r\n    let timeValue = \"02:00\";\r\n    let ampmValue = \"pm\";\r\n    const unixEndDate = Number(\r\n      moment(\r\n        `${dateValue} ${timeValue} ${ampmValue}`,\r\n        \"MM-DD-YYYY hh:mm A\",\r\n      ).format(\"X\"),\r\n    );\r\n    this.startCountdown(\r\n      this.renderCountdownDate({\r\n        dateValue,\r\n        timeValue,\r\n        ampmValue,\r\n        unixEndDate,\r\n      }),\r\n    );\r\n    console.log({ dateValue }, timeValue, ampmValue, unixEndDate);\r\n  }\r\n\r\n  startCountdown(endDate) {\r\n    clearInterval(this.timer);\r\n    this.timer = null;\r\n\r\n    if (endDate.unixEndDate !== \"\") {\r\n      this.timer = setInterval(() => this.playTimer(endDate.unixEndDate), 1000);\r\n    }\r\n  }\r\n\r\n  playTimer(unixEndDate) {\r\n    const distance = unixEndDate - moment().format(\"X\");\r\n    if (distance > 0) {\r\n      this.setState({\r\n        countdown: {\r\n          days: parseInt(distance / (60 * 60 * 24), 10),\r\n          hours: parseInt((distance % (60 * 60 * 24)) / (60 * 60), 10),\r\n          mins: parseInt((distance % (60 * 60)) / 60, 10),\r\n          secs: parseInt(distance % 60, 10),\r\n        },\r\n        isCountdownSet: true,\r\n        infoMessage: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let t = this;\r\n    if (this.state.Token) {\r\n      var config = {\r\n        headers: {\r\n          \"auth-token\": this.state.Token,\r\n        },\r\n      };\r\n      axios\r\n        .get(\"https://adgrecruitments.herokuapp.com/user/getuser\", config)\r\n        .then(function (response) {\r\n          console.log(response.data);\r\n          t.setState({ data: response.data });\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n    axios\r\n      .get(\"https://adgrecruitments.herokuapp.com/user/recruitmentstatus\")\r\n      .then((recruitmentStatus) =>\r\n        this.setState({ recruitmentStatus: !recruitmentStatus.data.status }),\r\n      );\r\n    this.startCountdown(this.renderCountdownDate());\r\n  }\r\n\r\n  handleLogOut = () => {\r\n    sessionStorage.clear();\r\n  };\r\n\r\n  render() {\r\n    let background;\r\n    // let profile = null;\r\n\r\n    if (this.state.Token) {\r\n      background = (\r\n        <div>\r\n          <div id='adglogo-cont2'>\r\n            <img id='adglogo2' src={adglogo2} alt='ADG Logo' />\r\n            <div className='flex'></div>\r\n            {this.state.data ? (\r\n              <div id='profile-container' className='pf-cr'>\r\n                <div id='profile-wrapper' className='pf-wr'>\r\n                  <div className='uinf'>\r\n                    <div>\r\n                      <img id='userpic' src={userpic} alt='User pic' />\r\n                    </div>\r\n                    <div id='profile-title' className='usr-det'>\r\n                      {this.state.data.userDetails.name}\r\n                    </div>\r\n                  </div>\r\n                  <Link to='/'>\r\n                    <button id='logout-button' onClick={this.handleLogOut}>\r\n                      Logout\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className='container'>\r\n            <div id='cont-box'>\r\n              {/*{this.state.recruitmentStatus ? (*/}\r\n              {/*  this.props.children*/}\r\n              {/*) : (*/}\r\n              {/*  <h2 align='center'>Recruitments coming soon</h2>*/}\r\n              {/*)}*/}\r\n              {this.props.children}\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      );\r\n    } else {\r\n      background = (\r\n        <div id='background'>\r\n          <div id='adglogo-cont'>\r\n            <img id='adglogo' src={adglogo} alt='ADG Logo' />\r\n          </div>\r\n          <div className='container'>\r\n            <div id='cont-box'>\r\n              {this.state.recruitmentStatus ? (\r\n                this.props.children\r\n              ) : (\r\n                <>\r\n                  <h2 align='center'>Recruitments coming soon</h2>\r\n                  {this.setEndDate()}\r\n                  {this.state.isCountdownSet ? (\r\n                    <Countdown\r\n                      countdown={this.state.countdown}\r\n                      unixEndDate={\r\n                        \"\\n\" + \"<Countdown date={'2020-12-23T14:00:00\"\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <p className='message info-message'>\r\n                      <span className='fa fa-info-circle fa-lg fa-fw'></span>{\" \"}\r\n                      {this.state.infoMessage}\r\n                    </p>\r\n                  )}\r\n                </>\r\n              )}\r\n              {/*{this.props.children}*/}\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {/* <div id='back-img' /> */}\r\n        {background}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Background;\r\n","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Quiz/Timer.jsx",["82"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./Quiz.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet timeDisplay;\r\nconst Timer = (props)=>{\r\n        // const[timerColor, setTimerColor] = useState(\"dodgerblue\");\r\n        let minutes=Math.floor(props.time/60);\r\n        let seconds=Math.floor(props.time%60);\r\n        if (seconds<10)\r\n            timeDisplay=`${minutes} : 0${seconds} mins remaining`;\r\n        else\r\n            timeDisplay=`${minutes} : ${seconds} mins remaining`;\r\n        let width=250-((props.time/600)*250);\r\n        // console.log(width);\r\n        if(minutes===0 && seconds<=30) {\r\n            return(\r\n                <div className=\"progress\">\r\n                    <div className=\"progress-done-red\" style={{width}}></div>\r\n                    {timeDisplay}\r\n                </div>\r\n            )\r\n        }\r\n        if(minutes===0 && seconds===0){\r\n            return(\r\n            <Redirect to=\"/thank-you\" />\r\n            )}\r\n            return(\r\n            <div className=\"progress\">\r\n                <div className=\"progress-done\" style={{width}}></div>\r\n                {timeDisplay}\r\n            </div>\r\n            )\r\n}\r\nexport default Timer;\r\n","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Modals/Modal.jsx",["83"],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { faTimes } from \"@fortawesome/free-brands-svg-icons\";\nimport \"./Modal.css\";\n// import FontAwesome from \"react-fontawesome\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Modal = (props) => {\n    let modalRef=useRef()\n    // useEffect(()=>{\n    //     document.addEventListener(\"click\",(event)=>{\n    //     if(!modalRef.current.contains(event.target)){\n    //         props.onHide();\n    //     }\n    //     });\n    // });\n    const modalClass = props.show ? \"modal\" : \"modal display-none\";\n    return (\n        <div className={modalClass}>\n        <div className=\"modal-main\" ref={modalRef}>\n            {/* <FontAwesomeIcon icon={ faTimes } className=\"times\" /> */}\n            <h4>Confirm Submission</h4>\n            <p>You won't be able to re-attempt or change your answers!</p>\n            <div className='sub-btns'>\n                <Link className='noUn' to=\"/thank-you\"><button onCLick={ props.submitQuiz } className=\"btn submit-btn mod-btn\">Confirm</button></Link>\n                <button className='btn submit-btn mod-btn' onClick={props.onHide}>Close</button>\n            </div>\n            </div>\n        </div>\n    )};\nexport default Modal;\n","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Footer/Footer.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/src/components/Countdown/Countdown.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":47,"column":7,"nodeType":"90","endLine":47,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":86,"column":37,"nodeType":"93","messageId":"94","endLine":86,"endColumn":39},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":187,"column":30,"nodeType":"93","messageId":"101","endLine":187,"endColumn":31},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":18},{"ruleId":"95","severity":1,"message":"102","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":19},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]