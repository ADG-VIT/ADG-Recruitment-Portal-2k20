[{"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/SignUp.js":"1","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/App.js":"2","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Domain&Instructions/DomainPage.jsx":"3","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/Login/Login.js":"4","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Footer/Footer.js":"5","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Quiz/DesignQuiz.js":"6","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Domain&Instructions/Instructions.jsx":"7","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Landing/Landing.js":"8"},{"size":10470,"mtime":1608244855093,"results":"9","hashOfConfig":"10"},{"size":1869,"mtime":1608202824069,"results":"11","hashOfConfig":"10"},{"size":2186,"mtime":1608246303429,"results":"12","hashOfConfig":"10"},{"size":2783,"mtime":1608273886595,"results":"13","hashOfConfig":"10"},{"size":994,"mtime":1608275037863,"results":"14","hashOfConfig":"10"},{"size":5126,"mtime":1608275171243,"results":"15","hashOfConfig":"10"},{"size":1767,"mtime":1608278765033,"results":"16","hashOfConfig":"10"},{"size":738,"mtime":1608280359965,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"hgyged",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/SignUp.js",["37","38"],"import React, { Component } from \"react\";\nimport Background from \"../../../hoc/Background/Background\";\nimport axios from \"axios\";\n\nexport class SignUp extends Component {\n    state = {\n        firstPage: true,\n        name: \"\",\n        regno: \"\",\n        email: \"\",\n        phone: \"\",\n        yearofstudy: 1,\n        password: \"\",\n        confirmPass: \"\",\n        github: \"\",\n        nameError: \"\",\n        regError: \"\",\n        emailError: \"\",\n        passError: \"\",\n        confirmPassError: \"\",\n        phoneError: \"\",\n        gitError: \"\",\n        err: \"\",\n    };\n\n    validate = () => {\n        let nameError= \"\";\n        let regError= \"\";\n        let passError= \"\";\n        let confirmPassError= \"\";\n        var regPattern= /^[12][09][A-Z][A-Z][A-Z]\\d{4}$/;\n        var regPatternSoph= /^[1][9][A-Z][A-Z][A-Z]\\d{4}$/;\n\n        if(!this.state.name) {\n            nameError= \"Name field cannot be left empty\";\n        }\n\n        if(!this.state.regno) {\n            regError= \"Registration number cannot be left empty\";\n        }\n\n        else if(!regPattern.test(this.state.regno)) {\n            regError= \"Enter Valid Registration number\";\n        }\n\n        if(regPatternSoph.test(this.state.regno)) {\n            this.state.yearofstudy= 2;\n        }\n\n        if(!this.state.password) {\n            passError= \"Enter Password\";\n        }\n\n        else if(this.state.password.length<8) {\n            passError= \"Password length must be greater than 8 characters\";\n        }\n\n        if(this.state.password && !this.state.confirmPass) {\n            confirmPassError= \"Confirm Password\";\n        }\n\n        else if(this.state.password != this.state.confirmPass) {\n            confirmPassError= \"Password and Confirm Password do not match\"\n        }\n\n        if(nameError || regError || passError || confirmPassError) {\n            this.setState({nameError, regError, passError, confirmPassError});\n            return false;\n        }\n\n        return true;\n    }\n\n    validate2 = () => {\n        let emailError= \"\";\n        let phoneError= \"\";\n        let gitError= \"\";\n        var re = /^[a-zA-Z0-9.!#$%&'+=?^_`{|}~-]+@vitstudent.ac.in$/;\n\n        if(!this.state.email) {\n            emailError= \"email field cannot be left empty\";\n        }\n\n        else if(!re.test(this.state.email)) {\n            emailError=\"invalid email\";\n        }\n\n        if(!this.state.phone) {\n            phoneError= \"Phone number cannot be left empty\";\n        }\n\n        if(this.state.yearofstudy===2) {\n            gitError= \"Github ID is mandatory for seniors\";\n        }\n\n        if(emailError || phoneError || gitError) {\n            this.setState({emailError, phoneError, gitError});\n        }\n\n        return true;\n    }\n\n    createAccountClickHandler = event => {\n        event.preventDefault();\n        this.validate();\n\n        if(this.validate()) {\n            this.setState({ firstPage: false });\n        }\n\n    };\n    inputChangeHandler = (e, s) => {\n        this.setState({ [s]: e.target.value });\n    };\n    formSubmitHandler = (e, a) => {\n\n        this.validate2();\n\n        console.log(this.state.yearofstudy);\n\n        const data = JSON.stringify({\n            name: this.state.name,\n            regno: this.state.regno,\n            email: this.state.email,\n            phone: this.state.phone,\n            yearofstudy: this.state.yearofstudy,\n            password: this.state.password,\n            githubLink: this.state.github,\n        });\n        var config = {\n            method: \"post\",\n            url: \"https://adgrecruitments.herokuapp.com/user/signup\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: data,\n        };\n\n        axios(config)\n            .then(function (response) {\n                console.log(JSON.stringify(response.data));\n                a.history.push(\"/login\");\n            })\n            .catch(function (error) {\n                alert(error.response.data.message);\n                console.log(error.success);\n            });\n    };\n    componentDidMount() {\n        if (sessionStorage.getItem(\"Token\")) {\n            this.props.history.replace(\"/selection\");\n        }\n    }\n\n    render() {\n        return (\n            <Background>\n                <form>\n                    {this.state.firstPage ? (\n                        <div>\n                            <div className='heading'>Sign Up</div>\n                            <div className='input-grp'>\n                                <label>Name</label>\n\n                                <input\n                                    className='input'\n                                    type='text'\n                                    placeholder='Enter your name'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"name\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.nameError ? <div className='error'>\n                                {this.state.nameError}\n                            </div> : null}\n                            <div className='input-grp'>\n                                <label>Registration Number</label>\n                                <input\n                                    className='input'\n                                    type='text'\n                                    placeholder='Enter Registration number'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"regno\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.regError ? <div className='error'>\n                                {this.state.regError}\n                            </div> : null}\n                            <div className='input-grp'>\n                                <label>Password</label>\n                                <input\n                                    className='input'\n                                    type='password'\n                                    placeholder='Enter your password'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"password\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.passError? <div className='error'>\n                                {this.state.passError}\n                            </div> : null}\n                            <div className='input-grp'>\n                                <label>Confirm password</label>\n                                <input\n                                    className='input'\n                                    type='password'\n                                    placeholder='Confirm password'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"confirmPass\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.confirmPassError ? <div className='error'>\n                                {this.state.confirmPassError}\n                            </div> : null}\n                            <div className='sub-btn' onClick={this.createAccountClickHandler}>\n                                Create account\n                            </div>\n                        </div>\n                    ) : (\n                        <div>\n                            <div className='heading'>Sign Up</div>\n                            <div className='input-grp'>\n                                <label>Phone</label>\n                                <input\n                                    className='input'\n                                    type='text'\n                                    placeholder='Enter your phone no.'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"phone\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.phoneError ? <div className='error'>\n                                {this.state.phoneError}\n                            </div> : null}\n                            <div className='input-grp'>\n                                <label>VIT-Email</label>\n                                <input\n                                    className='input'\n                                    type='text'\n                                    placeholder='Enter your VIT Email'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"email\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.emailError ? <div className='error'>\n                                {this.state.emailError}\n                            </div> : null}\n                            <div className='input-grp'>\n                                <label>Github</label>\n                                <input\n                                    className='input'\n                                    type='text'\n                                    placeholder='Enter your github handle'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"github\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.gitError ? <div className='error'>\n                                {this.state.gitError}\n                            </div> : null}\n                            <div\n                                className='sub-btn'\n                                onClick={(event) => {\n                                    this.formSubmitHandler(event, this.props);\n                                }}>\n                                Sign Up\n                            </div>\n                        </div>\n                    )}\n                </form>\n            </Background>\n        );\n    }\n}\n\nexport default SignUp;\n","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/App.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Domain&Instructions/DomainPage.jsx",["39"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./styles.module.css\";\nimport Background from \"../../../hoc/Background/Background\";\nimport gear from \"../../../assets/img/settings-gear-63.svg\";\n\nconst DomainPage = (props) => {\n  if (!sessionStorage.getItem(\"Token\")) {\n    props.history.replace(\"/\");\n  }\n  const [checkVal, setCheckVal] = useState(\"Technical\");\n  function getSelectedVal(event) {\n    setCheckVal(event.target.value);\n  }\n  const linkTo = {\n    pathname: \"/instructions\",\n    param: checkVal,\n  };\n  return (\n    <Background>\n      <div className='heading'>Choose Domain</div>\n      <div className='sub-heading'>Choose a domain to start the quiz</div>\n      <div\n        // style={{\n        //   display: \"flex\",\n        //   flexDirection: \"column\",\n        //   justifyContent: \"center\",\n        // }}\n        onChange={getSelectedVal}>\n        <div className='rdio-grp lgn-btn'>\n          <input\n            type='radio'\n            value='Technical'\n            name='selection'\n            id='technical'\n            className={classes.input}></input>\n          <label\n            htmlFor='technical'\n            className={`${classes.label} ${classes.tech}`}>\n            Technical\n          </label>\n        </div>\n        <div className='rdio-grp lgn-btn'>\n          <input\n            type='radio'\n            value='Design'\n            name='selection'\n            id='design'\n            className={classes.input}></input>\n          <label htmlFor='design' className={`${classes.label} ${classes.des}`}>\n            Design\n          </label>\n        </div>\n        <div className='rdio-grp lgn-btn'>\n          <input\n            type='radio'\n            value='Management'\n            name='selection'\n            id='management'\n            className={classes.input}></input>\n          <label\n            htmlFor='management'\n            className={`${classes.label} ${classes.man}`}>\n            Management\n          </label>\n        </div>\n        <Link to={linkTo} className='btn btn-blue lgn-btn'>\n          Start Quiz\n        </Link>\n      </div>\n    </Background>\n  );\n};\nexport default DomainPage;\n",["40","41"],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/Login/Login.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Footer/Footer.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Quiz/DesignQuiz.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Domain&Instructions/Instructions.jsx",["42","43","44","45"],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Landing/Landing.js",[],{"ruleId":"46","severity":1,"message":"47","line":47,"column":13,"nodeType":"48","endLine":47,"endColumn":23},{"ruleId":"49","severity":1,"message":"50","line":62,"column":37,"nodeType":"51","messageId":"52","endLine":62,"endColumn":39},{"ruleId":"53","severity":1,"message":"54","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":12},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"49","severity":1,"message":"61","line":26,"column":33,"nodeType":"51","messageId":"52","endLine":26,"endColumn":35},{"ruleId":"49","severity":1,"message":"61","line":28,"column":36,"nodeType":"51","messageId":"52","endLine":28,"endColumn":38},{"ruleId":"49","severity":1,"message":"61","line":33,"column":33,"nodeType":"51","messageId":"52","endLine":33,"endColumn":35},{"ruleId":"49","severity":1,"message":"61","line":35,"column":36,"nodeType":"51","messageId":"52","endLine":35,"endColumn":38},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'gear' is defined but never used.","Identifier","unusedVar","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]