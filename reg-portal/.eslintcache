[{"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/SignUp.js":"1"},{"size":10470,"mtime":1608244855093,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"hgyged","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/SignUp.js",["7","8"],"import React, { Component } from \"react\";\nimport Background from \"../../../hoc/Background/Background\";\nimport axios from \"axios\";\n\nexport class SignUp extends Component {\n    state = {\n        firstPage: true,\n        name: \"\",\n        regno: \"\",\n        email: \"\",\n        phone: \"\",\n        yearofstudy: 1,\n        password: \"\",\n        confirmPass: \"\",\n        github: \"\",\n        nameError: \"\",\n        regError: \"\",\n        emailError: \"\",\n        passError: \"\",\n        confirmPassError: \"\",\n        phoneError: \"\",\n        gitError: \"\",\n        err: \"\",\n    };\n\n    validate = () => {\n        let nameError= \"\";\n        let regError= \"\";\n        let passError= \"\";\n        let confirmPassError= \"\";\n        var regPattern= /^[12][09][A-Z][A-Z][A-Z]\\d{4}$/;\n        var regPatternSoph= /^[1][9][A-Z][A-Z][A-Z]\\d{4}$/;\n\n        if(!this.state.name) {\n            nameError= \"Name field cannot be left empty\";\n        }\n\n        if(!this.state.regno) {\n            regError= \"Registration number cannot be left empty\";\n        }\n\n        else if(!regPattern.test(this.state.regno)) {\n            regError= \"Enter Valid Registration number\";\n        }\n\n        if(regPatternSoph.test(this.state.regno)) {\n            this.state.yearofstudy= 2;\n        }\n\n        if(!this.state.password) {\n            passError= \"Enter Password\";\n        }\n\n        else if(this.state.password.length<8) {\n            passError= \"Password length must be greater than 8 characters\";\n        }\n\n        if(this.state.password && !this.state.confirmPass) {\n            confirmPassError= \"Confirm Password\";\n        }\n\n        else if(this.state.password != this.state.confirmPass) {\n            confirmPassError= \"Password and Confirm Password do not match\"\n        }\n\n        if(nameError || regError || passError || confirmPassError) {\n            this.setState({nameError, regError, passError, confirmPassError});\n            return false;\n        }\n\n        return true;\n    }\n\n    validate2 = () => {\n        let emailError= \"\";\n        let phoneError= \"\";\n        let gitError= \"\";\n        var re = /^[a-zA-Z0-9.!#$%&'+=?^_`{|}~-]+@vitstudent.ac.in$/;\n\n        if(!this.state.email) {\n            emailError= \"email field cannot be left empty\";\n        }\n\n        else if(!re.test(this.state.email)) {\n            emailError=\"invalid email\";\n        }\n\n        if(!this.state.phone) {\n            phoneError= \"Phone number cannot be left empty\";\n        }\n\n        if(this.state.yearofstudy===2) {\n            gitError= \"Github ID is mandatory for seniors\";\n        }\n\n        if(emailError || phoneError || gitError) {\n            this.setState({emailError, phoneError, gitError});\n        }\n\n        return true;\n    }\n\n    createAccountClickHandler = event => {\n        event.preventDefault();\n        this.validate();\n\n        if(this.validate()) {\n            this.setState({ firstPage: false });\n        }\n\n    };\n    inputChangeHandler = (e, s) => {\n        this.setState({ [s]: e.target.value });\n    };\n    formSubmitHandler = (e, a) => {\n\n        this.validate2();\n\n        console.log(this.state.yearofstudy);\n\n        const data = JSON.stringify({\n            name: this.state.name,\n            regno: this.state.regno,\n            email: this.state.email,\n            phone: this.state.phone,\n            yearofstudy: this.state.yearofstudy,\n            password: this.state.password,\n            githubLink: this.state.github,\n        });\n        var config = {\n            method: \"post\",\n            url: \"https://adgrecruitments.herokuapp.com/user/signup\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: data,\n        };\n\n        axios(config)\n            .then(function (response) {\n                console.log(JSON.stringify(response.data));\n                a.history.push(\"/login\");\n            })\n            .catch(function (error) {\n                alert(error.response.data.message);\n                console.log(error.success);\n            });\n    };\n    componentDidMount() {\n        if (sessionStorage.getItem(\"Token\")) {\n            this.props.history.replace(\"/selection\");\n        }\n    }\n\n    render() {\n        return (\n            <Background>\n                <form>\n                    {this.state.firstPage ? (\n                        <div>\n                            <div className='heading'>Sign Up</div>\n                            <div className='input-grp'>\n                                <label>Name</label>\n\n                                <input\n                                    className='input'\n                                    type='text'\n                                    placeholder='Enter your name'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"name\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.nameError ? <div className='error'>\n                                {this.state.nameError}\n                            </div> : null}\n                            <div className='input-grp'>\n                                <label>Registration Number</label>\n                                <input\n                                    className='input'\n                                    type='text'\n                                    placeholder='Enter Registration number'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"regno\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.regError ? <div className='error'>\n                                {this.state.regError}\n                            </div> : null}\n                            <div className='input-grp'>\n                                <label>Password</label>\n                                <input\n                                    className='input'\n                                    type='password'\n                                    placeholder='Enter your password'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"password\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.passError? <div className='error'>\n                                {this.state.passError}\n                            </div> : null}\n                            <div className='input-grp'>\n                                <label>Confirm password</label>\n                                <input\n                                    className='input'\n                                    type='password'\n                                    placeholder='Confirm password'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"confirmPass\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.confirmPassError ? <div className='error'>\n                                {this.state.confirmPassError}\n                            </div> : null}\n                            <div className='sub-btn' onClick={this.createAccountClickHandler}>\n                                Create account\n                            </div>\n                        </div>\n                    ) : (\n                        <div>\n                            <div className='heading'>Sign Up</div>\n                            <div className='input-grp'>\n                                <label>Phone</label>\n                                <input\n                                    className='input'\n                                    type='text'\n                                    placeholder='Enter your phone no.'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"phone\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.phoneError ? <div className='error'>\n                                {this.state.phoneError}\n                            </div> : null}\n                            <div className='input-grp'>\n                                <label>VIT-Email</label>\n                                <input\n                                    className='input'\n                                    type='text'\n                                    placeholder='Enter your VIT Email'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"email\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.emailError ? <div className='error'>\n                                {this.state.emailError}\n                            </div> : null}\n                            <div className='input-grp'>\n                                <label>Github</label>\n                                <input\n                                    className='input'\n                                    type='text'\n                                    placeholder='Enter your github handle'\n                                    onChange={(event) => {\n                                        this.inputChangeHandler(event, \"github\");\n                                    }}\n                                />\n                            </div>\n                            {this.state.gitError ? <div className='error'>\n                                {this.state.gitError}\n                            </div> : null}\n                            <div\n                                className='sub-btn'\n                                onClick={(event) => {\n                                    this.formSubmitHandler(event, this.props);\n                                }}>\n                                Sign Up\n                            </div>\n                        </div>\n                    )}\n                </form>\n            </Background>\n        );\n    }\n}\n\nexport default SignUp;\n",{"ruleId":"9","severity":1,"message":"10","line":47,"column":13,"nodeType":"11","endLine":47,"endColumn":23},{"ruleId":"12","severity":1,"message":"13","line":62,"column":37,"nodeType":"14","messageId":"15","endLine":62,"endColumn":39},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]