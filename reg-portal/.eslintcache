[{"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/App.js":"1","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/SignUp.js":"2","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Quiz/Timer.jsx":"3","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Quiz/TechQuiz.js":"4","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Landing/Landing.js":"5","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Footer/Footer.js":"6","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/index.js":"7","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/Login/Login.js":"8","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Domain&Instructions/DomainPage.jsx":"9"},{"size":1869,"mtime":1608202824069,"results":"10","hashOfConfig":"11"},{"size":7768,"mtime":1608232592263,"results":"12","hashOfConfig":"11"},{"size":649,"mtime":1607798047782,"results":"13","hashOfConfig":"11"},{"size":3316,"mtime":1608202063591,"results":"14","hashOfConfig":"11"},{"size":737,"mtime":1608219298390,"results":"15","hashOfConfig":"11"},{"size":994,"mtime":1608219029694,"results":"16","hashOfConfig":"11"},{"size":264,"mtime":1607866360339,"results":"17","hashOfConfig":"11"},{"size":2852,"mtime":1608201893552,"results":"18","hashOfConfig":"11"},{"size":2211,"mtime":1608241159786,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"hgyged",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/App.js",[],["43","44"],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/SignUp.js",["45","46","47","48"],"import React, { Component } from \"react\";\nimport Background from \"../../../hoc/Background/Background\";\nimport axios from \"axios\";\n\nexport class SignUp extends Component {\n  state = {\n    firstPage: true,\n    name: \"\",\n    regno: \"\",\n    email: \"\",\n    phone: \"\",\n    yearofstudy: 1,\n    password: \"\",\n    confirmPass: \"\",\n    github: \"\",\n    nameError: \"\",\n    regError: \"\",\n    emailError: \"\",\n    passError: \"\",\n    confirmPassError: \"\",\n    phoneError: \"\",\n    gitError: \"\",\n  };\n\n  validate = () => {\n    let nameError = \"\";\n    let regError = \"\";\n    let passError = \"\";\n    let confirmPassError = \"\";\n\n    if (!this.state.name) {\n      nameError = \"Name field cannot be left empty\";\n    }\n\n    if (!this.state.regno) {\n      regError = \"Registration number cannot be left empty\";\n    }\n\n    if (!this.state.password) {\n      passError = \"Enter Password\";\n    } else if (this.state.password.length < 8) {\n      passError = \"Password length must be greater than 8 characters\";\n    }\n\n    if (this.state.password && !this.state.confirmPass) {\n      confirmPassError = \"Confirm Password\";\n    } else if (this.state.password !== this.state.confirmPass) {\n      confirmPassError = \"Password and Confirm Password do not match\";\n    }\n\n    if (nameError || regError || passError || confirmPassError) {\n      this.setState({ nameError, regError, passError, confirmPassError });\n      return false;\n    }\n\n    return true;\n  };\n\n  validate2 = () => {\n    let emailError = \"\";\n    let phoneError = \"\";\n    let gitError = \"\";\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!this.state.email) {\n      emailError = \"email field cannot be left empty\";\n    } else if (!re.test(this.state.email)) {\n      emailError = \"invalid email\";\n    }\n\n    if (!this.state.phone) {\n      phoneError = \"Phone number cannot be left empty\";\n    }\n\n    if (!this.state.github) {\n      gitError = \"Github ID cannot be left empty\";\n    }\n\n    if (emailError || phoneError || gitError) {\n      this.setState({ emailError, phoneError, gitError });\n    }\n\n    return true;\n  };\n\n  createAccountClickHandler = (event) => {\n    event.preventDefault();\n    this.validate();\n\n    if (this.validate()) {\n      this.setState({ firstPage: false });\n    }\n  };\n  inputChangeHandler = (e, s) => {\n    this.setState({ [s]: e.target.value });\n  };\n  formSubmitHandler = (e, a) => {\n    this.validate2();\n\n    const data = JSON.stringify({\n      name: this.state.name,\n      regno: this.state.regno,\n      email: this.state.email,\n      phone: this.state.phone,\n      yearofstudy: \"1\",\n      password: this.state.password,\n      // github: this.state.github,\n    });\n    var config = {\n      method: \"post\",\n      url: \"https://adgrecruitments.herokuapp.com/user/signup\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n        a.history.push(\"/login\");\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  componentDidMount() {\n    if (sessionStorage.getItem(\"Token\")) {\n      this.props.history.replace(\"/selection\");\n    }\n  }\n\n  render() {\n    return (\n      <Background>\n        <form autofill='off'>\n          {this.state.firstPage ? (\n            <div>\n              <div className='heading'>Sign Up</div>\n              <div className='input-grp'>\n                <label>Name</label>\n\n                <input\n                  className='input'\n                  type='text'\n                  placeholder='Enter your name'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"name\");\n                  }}\n                />\n              </div>\n              {this.state.nameError ? (\n                <div className='error'>{this.state.nameError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>Registration Number</label>\n                <input\n                  className='input'\n                  type='text'\n                  placeholder='Enter Registration number'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"regno\");\n                  }}\n                />\n              </div>\n              {this.state.regError ? (\n                <div className='error'>{this.state.regError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>Password</label>\n                <input\n                  className='input'\n                  type='password'\n                  placeholder='Enter your password'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"password\");\n                  }}\n                />\n              </div>\n              {this.state.passError ? (\n                <div className='error'>{this.state.passError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>Confirm password</label>\n                <input\n                  className='input'\n                  type='password'\n                  placeholder='Confirm password'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"confirmPass\");\n                  }}\n                />\n              </div>\n              {this.state.confirmPassError ? (\n                <div className='error'>{this.state.confirmPassError}</div>\n              ) : null}\n              <div className='sub-btn' onClick={this.createAccountClickHandler}>\n                Create Account\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className='heading'>Sign Up</div>\n              <div className='input-grp'>\n                <label>Phone</label>\n                <input\n                  className='input'\n                  type='tel'\n                  placeholder='Enter your phone no.'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"phone\");\n                  }}\n                />\n              </div>\n              {this.state.phoneError ? (\n                <div className='error'>{this.state.phoneError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>VIT-Email</label>\n                <input\n                  className='input'\n                  type='text'\n                  placeholder='Enter your VIT Email'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"email\");\n                  }}\n                />\n              </div>\n              {this.state.emailError ? (\n                <div className='error'>{this.state.emailError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>Github</label>\n                <input\n                  className='input'\n                  type='text'\n                  value={this.state.github}\n                  placeholder='Enter your github handle'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"github\");\n                  }}\n                />\n              </div>\n              {this.state.gitError ? (\n                <div className='error'>{this.state.gitError}</div>\n              ) : null}\n              <div\n                className='sub-btn'\n                onClick={(event) => {\n                  this.formSubmitHandler(event, this.props);\n                }}>\n                Sign Up\n              </div>\n            </div>\n          )}\n        </form>\n      </Background>\n    );\n  }\n}\n\nexport default SignUp;\n",["49","50"],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Quiz/Timer.jsx",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Quiz/TechQuiz.js",["51","52","53","54"],"import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport \"./Quiz.css\";\r\nimport Timer from \"./Timer\";\r\nimport Background from \"../../hoc/Background/Background\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst TechQuiz = (props) => {\r\n    const [quizQuestions, setQuizQuestions] = useState([]);\r\n    let [currentQuestion, setCurrentQuestion] = useState(0);\r\n    let questions=[];\r\n    let [time, setTime] = useState(600);\r\n    useEffect(() => {\r\n        if (time > 0) {\r\n          setTimeout(() => {\r\n            setTime(--time);\r\n          }, 1000);\r\n        }\r\n      });\r\n      function displayQuestion(descrip,options){\r\n        // setQuestions((prevQ)=>{\r\n        //     return [...prevQ,{questionDescription:descrip}]\r\n        // });\r\n        var q={descrip:descrip,options:options}\r\n        questions.push(q);\r\n        questions.forEach(q=>{\r\n            console.log(\"Description\",q.descrip);\r\n            let opt=q.options;\r\n            Object.keys(opt).map((index)=>{\r\n                console.log(\"OPTION:\",index,opt[index]);\r\n            })\r\n        })\r\n      }\r\n    // useEffect(() => {\r\n    //         getQuizQuestions();\r\n    // });\r\n    if(!sessionStorage.getItem(\"Token\")) {\r\n        return(\r\n            <Redirect to=\"/\" />\r\n        )\r\n    }\r\n\r\n    function getQuizQuestions() {\r\n        console.log(\"val\");\r\n        fetch(\"https://adgrecruitments.herokuapp.com/questions/technical/get-quiz-questions/1/web\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": sessionStorage.getItem(\"Token\"),\r\n            },\r\n        })\r\n        .then((response) => {\r\n            console.log(response);\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            setQuizQuestions(data);\r\n            quizQuestions.map(prevQ=>{\r\n                displayQuestion(prevQ.questionDescription,prevQ.options);\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            alert(\"Error in fetching quiz questions!\");\r\n        })\r\n    }\r\n    \r\n    if (questions.length>0) {\r\n        return (\r\n          <Background>\r\n                  <div className='question-section'>\r\n                    <div className='question-count'>\r\n                      <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n                    </div>\r\n                    <div className='question-text'>\r\n                      {questions[currentQuestion].descrip}\r\n                    </div>\r\n                  </div>\r\n                  <div className='answer-section'>\r\n                      {Object.keys(questions.options).map(index=>{\r\n                          <button className='options'>{questions.options[index]}\r\n                        </button>\r\n                      })}\r\n                    <div className='btn-bottom'>\r\n                      <button>Previous</button>\r\n                      <Timer time={time} />\r\n                      <button>Next</button>\r\n                    </div>\r\n                  </div>\r\n          </Background>\r\n        );\r\n      } else {\r\n        return <Background>loading...\r\n            <button onClick={()=> getQuizQuestions() }>Get</button>\r\n        </Background>;\r\n      }\r\n}\r\n\r\nexport default TechQuiz;","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Landing/Landing.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Footer/Footer.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/index.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/Login/Login.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Domain&Instructions/DomainPage.jsx",["55"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./styles.module.css\";\nimport Background from \"../../../hoc/Background/Background\";\nimport gear from \"../../../assets/img/settings-gear-63.svg\";\n\nconst DomainPage = (props) => {\n  if (!sessionStorage.getItem(\"Token\")) {\n    props.history.replace(\"/\");\n  }\n  const [checkVal, setCheckVal] = useState(\"Technical\");\n  function getSelectedVal(event) {\n    setCheckVal(event.target.value);\n  }\n  const linkTo = {\n    pathname: \"/instructions\",\n    param: checkVal,\n  };\n  return (\n    <Background>\n      <div className='heading'>Choose Domain</div>\n      <div className='sub-heading'>Choose a domain to start the quiz</div>\n      <div\n        // style={{\n        //   display: \"flex\",\n        //   flexDirection: \"column\",\n        //   justifyContent: \"center\",\n        // }}\n        onChange={getSelectedVal}>\n        <div className='rdio-grp lgn-btn'>\n          <input\n            type='radio'\n            value='Technical'\n            name='selection'\n            id='technical'\n            className={classes.input}></input>\n          <label\n            htmlFor='technical'\n            className={`${classes.label} ${classes.tech}`}>\n            {/* <img src={gear} height='25px' style={{verticalAlign: \"baseline\"}} /> */}\n            Technical\n          </label>\n        </div>\n        <div className='rdio-grp lgn-btn'>\n          <input\n            type='radio'\n            value='Design'\n            name='selection'\n            id='design'\n            className={classes.input}></input>\n          <label htmlFor='design' className={classes.label}>\n            Design\n          </label>\n        </div>\n        <div className='rdio-grp lgn-btn'>\n          <input\n            type='radio'\n            value='Management'\n            name='selection'\n            id='management'\n            className={classes.input}></input>\n          <label htmlFor='management' className={classes.label}>\n            Management\n          </label>\n        </div>\n        <Link to={linkTo} className='btn btn-blue lgn-btn'>\n          Start Quiz\n        </Link>\n      </div>\n    </Background>\n  );\n};\nexport default DomainPage;\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":63,"column":36,"nodeType":"62","messageId":"63","endLine":63,"endColumn":37,"suggestions":"64"},{"ruleId":"60","severity":1,"message":"61","line":63,"column":61,"nodeType":"62","messageId":"63","endLine":63,"endColumn":62,"suggestions":"65"},{"ruleId":"60","severity":1,"message":"61","line":63,"column":70,"nodeType":"62","messageId":"63","endLine":63,"endColumn":71,"suggestions":"66"},{"ruleId":"60","severity":1,"message":"61","line":63,"column":74,"nodeType":"62","messageId":"63","endLine":63,"endColumn":75,"suggestions":"67"},{"ruleId":"56","replacedBy":"68"},{"ruleId":"58","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":10,"column":27,"nodeType":"72","messageId":"73","endLine":10,"endColumn":45},{"ruleId":"74","severity":1,"message":"75","line":29,"column":41,"nodeType":"76","messageId":"77","endLine":29,"endColumn":43},{"ruleId":"74","severity":1,"message":"75","line":58,"column":36,"nodeType":"76","messageId":"77","endLine":58,"endColumn":38},{"ruleId":"74","severity":1,"message":"75","line":80,"column":64,"nodeType":"76","messageId":"77","endLine":80,"endColumn":66},{"ruleId":"70","severity":1,"message":"78","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":12},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["81","82"],["83","84"],["85","86"],["87","88"],["79"],["80"],"no-unused-vars","'setCurrentQuestion' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'gear' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"89","fix":"90","desc":"91"},{"messageId":"92","fix":"93","desc":"94"},{"messageId":"89","fix":"95","desc":"91"},{"messageId":"92","fix":"96","desc":"94"},{"messageId":"89","fix":"97","desc":"91"},{"messageId":"92","fix":"98","desc":"94"},{"messageId":"89","fix":"99","desc":"91"},{"messageId":"92","fix":"100","desc":"94"},"removeEscape",{"range":"101","text":"102"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"103","text":"104"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"105","text":"102"},{"range":"106","text":"104"},{"range":"107","text":"102"},{"range":"108","text":"104"},{"range":"109","text":"102"},{"range":"110","text":"104"},[1555,1556],"",[1555,1555],"\\",[1580,1581],[1580,1580],[1589,1590],[1589,1589],[1593,1594],[1593,1593]]