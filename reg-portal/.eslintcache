[{"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/App.js":"1","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Quiz/TechQuiz.js":"2","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Domain&Instructions/Thankyou.jsx":"3","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/hoc/Background/Background.js":"4","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Landing/Landing.js":"5","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/SignUp.js":"6","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/Login/Login.js":"7","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Domain&Instructions/Instructions.jsx":"8"},{"size":2219,"mtime":1608388393286,"results":"9","hashOfConfig":"10"},{"size":6582,"mtime":1608388393388,"results":"11","hashOfConfig":"10"},{"size":603,"mtime":1608388393288,"results":"12","hashOfConfig":"10"},{"size":2739,"mtime":1608396151351,"results":"13","hashOfConfig":"14"},{"size":762,"mtime":1608391849255,"results":"15","hashOfConfig":"10"},{"size":8477,"mtime":1608397468672,"results":"16","hashOfConfig":"14"},{"size":2783,"mtime":1608397342140,"results":"17","hashOfConfig":"14"},{"size":1751,"mtime":1608397919810,"results":"18","hashOfConfig":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hgyged",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h4npd9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/App.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Quiz/TechQuiz.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Domain&Instructions/Thankyou.jsx",["36"],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/hoc/Background/Background.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Landing/Landing.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/SignUp.js",["37"],"import React, { Component } from \"react\";\nimport Background from \"../../../hoc/Background/Background\";\nimport axios from \"axios\";\n\nexport class SignUp extends Component {\n  state = {\n    firstPage: true,\n    name: \"\",\n    regno: \"\",\n    email: \"\",\n    phone: \"\",\n    yearofstudy: 1,\n    password: \"\",\n    confirmPass: \"\",\n    github: \"\",\n    nameError: \"\",\n    regError: \"\",\n    emailError: \"\",\n    passError: \"\",\n    confirmPassError: \"\",\n    phoneError: \"\",\n    gitError: \"\",\n    err: \"\",\n  };\n\n  validate = () => {\n    let nameError = \"\";\n    let regError = \"\";\n    let passError = \"\";\n    let confirmPassError = \"\";\n    var regPattern = /^[12][09][A-Z][A-Z][A-Z]\\d{4}$/;\n    var regPatternSoph = /^[1][9][A-Z][A-Z][A-Z]\\d{4}$/;\n\n    if (!this.state.name) {\n      nameError = \"Name field cannot be left empty\";\n    }\n\n    if (!this.state.regno) {\n      regError = \"Registration number cannot be left empty\";\n    } else if (!regPattern.test(this.state.regno)) {\n      regError = \"Enter Valid Registration number\";\n    }\n\n    if (regPatternSoph.test(this.state.regno)) {\n      this.state.yearofstudy = 2;\n    }\n\n    if (!this.state.password) {\n      passError = \"Enter Password\";\n    } else if (this.state.password.length < 8) {\n      passError = \"Password length must be greater than 8 characters\";\n    }\n\n    if (this.state.password && !this.state.confirmPass) {\n      confirmPassError = \"Confirm Password\";\n    } else if (this.state.password !== this.state.confirmPass) {\n      confirmPassError = \"Password and Confirm Password do not match\";\n    }\n\n    if (nameError || regError || passError || confirmPassError) {\n      this.setState({ nameError, regError, passError, confirmPassError });\n      return false;\n    }\n\n    return true;\n  };\n\n  validate2 = () => {\n    let emailError = \"\";\n    let phoneError = \"\";\n    let gitError = \"\";\n    var re = /^[a-zA-Z0-9.!#$%&'+=?^_`{|}~-]+@vitstudent.ac.in$/;\n\n    if (!this.state.email) {\n      emailError = \"Email field cannot be left empty\";\n    } else if (!re.test(this.state.email)) {\n      emailError = \"invalid Email\";\n    }\n\n    if (!this.state.phone) {\n      phoneError = \"Phone number cannot be left empty\";\n    }\n\n    if (this.state.yearofstudy === 2) {\n      gitError = \"GitHub ID is mandatory for 2nd year students\";\n    }\n\n    if (emailError || phoneError || gitError) {\n      this.setState({ emailError, phoneError, gitError });\n    }\n\n    return true;\n  };\n\n  createAccountClickHandler = (event) => {\n    event.preventDefault();\n    this.validate();\n\n    if (this.validate()) {\n      this.setState({ firstPage: false });\n    }\n  };\n  inputChangeHandler = (e, s) => {\n    this.setState({ [s]: e.target.value });\n  };\n  formSubmitHandler = (e, a) => {\n    this.validate2();\n\n    console.log(this.state.yearofstudy);\n\n    const data = JSON.stringify({\n      name: this.state.name,\n      regno: this.state.regno,\n      email: this.state.email,\n      phone: this.state.phone,\n      yearofstudy: this.state.yearofstudy,\n      password: this.state.password,\n      githubLink: this.state.github,\n    });\n    var config = {\n      method: \"post\",\n      url: \"https://adgrecruitments.herokuapp.com/user/signup\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n        a.history.push(\"/login\");\n      })\n      .catch(function (error) {\n        alert(error.response.data.message);\n        console.log(error.success);\n      });\n  };\n  componentDidMount() {\n    if (sessionStorage.getItem(\"Token\")) {\n      this.props.history.replace(\"/selection\");\n    }\n  }\n\n  render() {\n    return (\n      <Background>\n        <form autoComplete='false'>\n          {this.state.firstPage ? (\n            <div>\n              <div className='heading'>Sign Up</div>\n              <div className='input-grp'>\n                <label>Name</label>\n\n                <input\n                  className='input name-input'\n                  type='text'\n                  value={this.state.name}\n                  placeholder='Enter your name'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"name\");\n                  }}\n                />\n              </div>\n              {this.state.nameError ? (\n                <div className='error'>{this.state.nameError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>Registration Number</label>\n                <input\n                  autoComplete='off'\n                  onFocus={this.onFocus}\n                  className='input'\n                  value={this.state.regno}\n                  type='text'\n                  placeholder='Enter Registration Number'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"regno\");\n                  }}\n                />\n              </div>\n              {this.state.regError ? (\n                <div className='error'>{this.state.regError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>Password</label>\n                <input\n                  className='input'\n                  type='password'\n                  value={this.state.password}\n                  placeholder='Enter Your Password'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"password\");\n                  }}\n                />\n              </div>\n              {this.state.passError ? (\n                <div className='error'>{this.state.passError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>Confirm password</label>\n                <input\n                  className='input'\n                  type='password'\n                  value={this.state.confirmPass}\n                  placeholder='Confirm Password'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"confirmPass\");\n                  }}\n                />\n              </div>\n              {this.state.confirmPassError ? (\n                <div className='error'>{this.state.confirmPassError}</div>\n              ) : null}\n              <div className='sub-btn' onClick={this.createAccountClickHandler}>\n                Next\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className='heading'>Sign Up</div>\n              <div className='input-grp'>\n                <label>Phone</label>\n                <input\n                  className='input'\n                  type='text'\n                  value={this.state.phone}\n                  placeholder='Enter Your Phone Number'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"phone\");\n                  }}\n                />\n              </div>\n              {this.state.phoneError ? (\n                <div className='error'>{this.state.phoneError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>VIT-Email</label>\n                <input\n                  className='input'\n                  type='text'\n                  value={this.state.email}\n                  placeholder='Enter Your VIT Email'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"email\");\n                  }}\n                />\n              </div>\n              {this.state.emailError ? (\n                <div className='error'>{this.state.emailError}</div>\n              ) : null}\n              <div className='input-grp'>\n                <label>GitHub</label>\n                <input\n                  className='input'\n                  type='text'\n                  value={this.state.github}\n                  placeholder='Enter Your GitHub Handle'\n                  onChange={(event) => {\n                    this.inputChangeHandler(event, \"github\");\n                  }}\n                />\n              </div>\n              {this.state.gitError ? (\n                <div className='error'>{this.state.gitError}</div>\n              ) : null}\n              <div\n                className='sub-btn'\n                onClick={(event) => {\n                  this.formSubmitHandler(event, this.props);\n                }}>\n                Sign Up\n              </div>\n            </div>\n          )}\n        </form>\n      </Background>\n    );\n  }\n}\n\nexport default SignUp;\n","/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/SignUp/Login/Login.js",[],"/Users/shashwatgupta/Desktop/react projects/ADG-reqruitment-portal/reg-portal/src/components/Forms/Domain&Instructions/Instructions.jsx",[],{"ruleId":"38","severity":1,"message":"39","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"43","line":45,"column":7,"nodeType":"44","endLine":45,"endColumn":17},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression"]